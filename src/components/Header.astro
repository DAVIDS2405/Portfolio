---
import Menu from "@icons/Menu.astro";
---

<header
  class="flex flex-col text-xs py-2 bg-black items-center justify-center top-0 lg:border-2 lg:rounded-full lg:border-white lg:flex-row lg:py-6 lg:top-1 sticky mx-auto w-full md:max-w-3xl z-50"
>
  <button id="menu-bar" class="flex w-full p-4 text-xl justify-end lg:hidden">
    <Menu class="size-9" />
  </button>

  <nav
    class="hidden bg-black absolute w-full h-dvh justify-center items-center gap-y-20 top-14 lg:top-0 lg:py-1 lg:flex lg:h-full lg:rounded-full lg:items-center lg:justify-center lg:flex-row lg:gap-x-10"
    id="menu-open"
  >
    <a href="#inicio" class="hover:text-red-300">Inicio</a>
    <a href="#experiencia" class="transition hover:text-red-300">Experiencia</a>
    <a href="#proyectos" class="hover:text-red-300">Proyectos</a>
    <a href="#sobremi" class="hover:text-red-300">Sobre mí</a>
    <a href="mailto:sebastian2405lucero@hotmail.com" class="hover:text-red-300"
      >Contacto</a
    >
  </nav>
</header>

<style>
  .menu-open-css {
    @apply flex flex-col;
  }
  .menu-hidden-css {
    @apply hidden;
  }
  .text-color-new {
    @apply text-red-300;
  }
</style>

<script>
  const button = document.querySelector("#menu-bar") as Element;
  const menuOpen = document.querySelector("#menu-open") as Element;
  const enlaces = document.querySelectorAll("#menu-open a");
  let enlaceAnterior: Element | null = null; // Almacena el enlace anterior

  button.addEventListener("click", () => {
    menuOpen.classList.toggle("menu-open-css");
  });

  menuOpen.addEventListener("click", () => {
    menuOpen.classList.remove("menu-open-css");
  });

  // Escuchar el evento de desplazamiento

  enlaces.forEach((enlace) => {
    enlace.addEventListener("click", () => {
      // Verificar si se ha cambiado de un enlace a otro
      if (enlace !== enlaceAnterior) {
        // Si es un nuevo enlace, quitar la clase del enlace anterior
        if (enlaceAnterior !== null) {
          enlaceAnterior.classList.remove("text-color-new");
        }
        // Aplicar la clase al enlace actual
        enlace.classList.add("text-color-new");
        // Actualizar el enlace anterior
        enlaceAnterior = enlace;
      }
    });
  });

  function cambiarColorEnlaces() {
    const viewportHeight = window.innerHeight;
    const scrollPosition = window.scrollY;
    const enlaces = document.querySelectorAll("a");
    const secciones = document.querySelectorAll("section");

    secciones.forEach((seccion) => {
      const rect = seccion.getBoundingClientRect();
      if (rect.top < viewportHeight / 5 && rect.bottom > viewportHeight / 5) {
        // La sección está en la mitad de la ventana gráfica
        enlaces.forEach((enlace) => {
          enlace.classList.remove("text-color-new");
        });
        const enlaceCorrespondiente = document.querySelector(
          `a[href="#${seccion.id}"]`
        );
        enlaceCorrespondiente?.classList.add("text-color-new");
      }
    });
  }

  window.addEventListener("scroll", cambiarColorEnlaces);
</script>
